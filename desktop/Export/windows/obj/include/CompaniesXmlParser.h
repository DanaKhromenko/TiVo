// Generated by Haxe 4.3.2
#ifndef INCLUDED_CompaniesXmlParser
#define INCLUDED_CompaniesXmlParser

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(CompaniesXmlParser)
HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS2(feathers,data,ArrayCollection)
HX_DECLARE_CLASS2(feathers,data,IFlatCollection)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,utils,IExternalizable)



class HXCPP_CLASS_ATTRIBUTES CompaniesXmlParser_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CompaniesXmlParser_obj OBJ_;
		CompaniesXmlParser_obj();

	public:
		enum { _hx_ClassId = 0x64f75a9b };

		void __construct(::String fileName);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CompaniesXmlParser")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CompaniesXmlParser"); }
		static ::hx::ObjectPtr< CompaniesXmlParser_obj > __new(::String fileName);
		static ::hx::ObjectPtr< CompaniesXmlParser_obj > __alloc(::hx::Ctx *_hx_ctx,::String fileName);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CompaniesXmlParser_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CompaniesXmlParser",db,77,33,0d); }

		::String fileName;
		 ::feathers::data::ArrayCollection getCompanies();
		::Dynamic getCompanies_dyn();

		::String getStringValueByName( ::Xml elements,::String name);
		::Dynamic getStringValueByName_dyn();

};


#endif /* INCLUDED_CompaniesXmlParser */ 
