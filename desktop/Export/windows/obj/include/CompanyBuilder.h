// Generated by Haxe 4.3.2
#ifndef INCLUDED_CompanyBuilder
#define INCLUDED_CompanyBuilder

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Company)
HX_DECLARE_CLASS0(CompanyBuilder)



class HXCPP_CLASS_ATTRIBUTES CompanyBuilder_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef CompanyBuilder_obj OBJ_;
		CompanyBuilder_obj();

	public:
		enum { _hx_ClassId = 0x3965d63e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CompanyBuilder")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CompanyBuilder"); }
		static ::hx::ObjectPtr< CompanyBuilder_obj > __new();
		static ::hx::ObjectPtr< CompanyBuilder_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CompanyBuilder_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CompanyBuilder",7e,53,7a,57); }

		::String companyName;
		::String description;
		::String website;
		::String imgUri;
		 ::CompanyBuilder withCompanyName(::String companyName);
		::Dynamic withCompanyName_dyn();

		 ::CompanyBuilder withDescription(::String description);
		::Dynamic withDescription_dyn();

		 ::CompanyBuilder withWebsite(::String website);
		::Dynamic withWebsite_dyn();

		 ::CompanyBuilder withImgUri(::String imgUri);
		::Dynamic withImgUri_dyn();

		 ::Company build();
		::Dynamic build_dyn();

};


#endif /* INCLUDED_CompanyBuilder */ 
