// Generated by Haxe 4.3.2
#ifndef INCLUDED_CompanyLayoutGroup
#define INCLUDED_CompanyLayoutGroup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_feathers_controls_LayoutGroup
#include <feathers/controls/LayoutGroup.h>
#endif
HX_DECLARE_CLASS0(Company)
HX_DECLARE_CLASS0(CompanyLayoutGroup)
HX_DECLARE_CLASS2(feathers,controls,LayoutGroup)
HX_DECLARE_CLASS2(feathers,core,FeathersControl)
HX_DECLARE_CLASS2(feathers,core,IDisplayObject)
HX_DECLARE_CLASS2(feathers,core,IMeasureObject)
HX_DECLARE_CLASS2(feathers,core,IUIControl)
HX_DECLARE_CLASS2(feathers,core,IValidating)
HX_DECLARE_CLASS2(feathers,core,MeasureSprite)
HX_DECLARE_CLASS2(feathers,core,ValidatingSprite)
HX_DECLARE_CLASS2(feathers,layout,ILayoutObject)
HX_DECLARE_CLASS2(feathers,style,IStyleObject)
HX_DECLARE_CLASS2(feathers,style,IVariantStyleObject)
HX_DECLARE_CLASS2(feathers,text,TextFormat)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES CompanyLayoutGroup_obj : public  ::feathers::controls::LayoutGroup_obj
{
	public:
		typedef  ::feathers::controls::LayoutGroup_obj super;
		typedef CompanyLayoutGroup_obj OBJ_;
		CompanyLayoutGroup_obj();

	public:
		enum { _hx_ClassId = 0x531cdf3c };

		void __construct( ::Company company, ::feathers::controls::LayoutGroup tabsContainer);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="CompanyLayoutGroup")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"CompanyLayoutGroup"); }
		static ::hx::ObjectPtr< CompanyLayoutGroup_obj > __new( ::Company company, ::feathers::controls::LayoutGroup tabsContainer);
		static ::hx::ObjectPtr< CompanyLayoutGroup_obj > __alloc(::hx::Ctx *_hx_ctx, ::Company company, ::feathers::controls::LayoutGroup tabsContainer);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~CompanyLayoutGroup_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("CompanyLayoutGroup",18,f2,64,94); }

		static void __boot();
		static ::String IMG_DIR_PATH;
		static int LOGO_HEIGHT;
		static int GAP_BETWEEN_FIELDS;
		static int LEFT_PADDING;
		static  ::feathers::text::TextFormat keyTextFormat;
		static  ::feathers::text::TextFormat valueTextFormat;
		 ::feathers::controls::LayoutGroup container;
		 ::Company company;
		int labelY;
		int labelHeight;
		int labelWidth;
		void printCompanyInfo();
		::Dynamic printCompanyInfo_dyn();

		void addLabel(::String key,::String value,::hx::Null< bool >  isUri);
		::Dynamic addLabel_dyn();

};


#endif /* INCLUDED_CompanyLayoutGroup */ 
