// Generated by Haxe 4.3.2
#ifndef INCLUDED_Popup
#define INCLUDED_Popup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Popup)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES Popup_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Popup_obj OBJ_;
		Popup_obj();

	public:
		enum { _hx_ClassId = 0x4e06e368 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Popup")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Popup"); }

		inline static ::hx::ObjectPtr< Popup_obj > __new() {
			::hx::ObjectPtr< Popup_obj > __this = new Popup_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Popup_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Popup_obj *__this = (Popup_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Popup_obj), false, "Popup"));
			*(void **)__this = Popup_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Popup_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Popup",0c,7a,c2,59); }

		static void Show(::String header,::String message, ::openfl::display::DisplayObject parent);
		static ::Dynamic Show_dyn();

};


#endif /* INCLUDED_Popup */ 
