// Generated by Haxe 4.3.2
#ifndef INCLUDED_TVShowBuilder
#define INCLUDED_TVShowBuilder

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(TVShow)
HX_DECLARE_CLASS0(TVShowBuilder)



class HXCPP_CLASS_ATTRIBUTES TVShowBuilder_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TVShowBuilder_obj OBJ_;
		TVShowBuilder_obj();

	public:
		enum { _hx_ClassId = 0x0648267c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="TVShowBuilder")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"TVShowBuilder"); }
		static ::hx::ObjectPtr< TVShowBuilder_obj > __new();
		static ::hx::ObjectPtr< TVShowBuilder_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TVShowBuilder_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TVShowBuilder",3c,11,01,2a); }

		int showId;
		int channelId;
		::String showName;
		int year;
		::String description;
		int startDate;
		int endDate;
		::String imgName;
		 ::TVShowBuilder withShowId(int showId);
		::Dynamic withShowId_dyn();

		 ::TVShowBuilder withChannelId(int channelId);
		::Dynamic withChannelId_dyn();

		 ::TVShowBuilder withShowName(::String showName);
		::Dynamic withShowName_dyn();

		 ::TVShowBuilder withYear(int year);
		::Dynamic withYear_dyn();

		 ::TVShowBuilder withDescription(::String description);
		::Dynamic withDescription_dyn();

		 ::TVShowBuilder withStartDate(int startDate);
		::Dynamic withStartDate_dyn();

		 ::TVShowBuilder withEndDate(int endDate);
		::Dynamic withEndDate_dyn();

		 ::TVShowBuilder withImgName(::String imgName);
		::Dynamic withImgName_dyn();

		 ::TVShow build();
		::Dynamic build_dyn();

};


#endif /* INCLUDED_TVShowBuilder */ 
