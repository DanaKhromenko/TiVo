// Generated by Haxe 4.3.2
#ifndef INCLUDED_TVShowsLayoutGroup
#define INCLUDED_TVShowsLayoutGroup

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_feathers_controls_LayoutGroup
#include <feathers/controls/LayoutGroup.h>
#endif
HX_DECLARE_CLASS0(TVShow)
HX_DECLARE_CLASS0(TVShowsLayoutGroup)
HX_DECLARE_CLASS2(feathers,controls,LayoutGroup)
HX_DECLARE_CLASS2(feathers,core,FeathersControl)
HX_DECLARE_CLASS2(feathers,core,IDisplayObject)
HX_DECLARE_CLASS2(feathers,core,IMeasureObject)
HX_DECLARE_CLASS2(feathers,core,IUIControl)
HX_DECLARE_CLASS2(feathers,core,IValidating)
HX_DECLARE_CLASS2(feathers,core,MeasureSprite)
HX_DECLARE_CLASS2(feathers,core,ValidatingSprite)
HX_DECLARE_CLASS2(feathers,data,ArrayCollection)
HX_DECLARE_CLASS2(feathers,data,IFlatCollection)
HX_DECLARE_CLASS2(feathers,layout,ILayoutObject)
HX_DECLARE_CLASS2(feathers,style,IStyleObject)
HX_DECLARE_CLASS2(feathers,style,IVariantStyleObject)
HX_DECLARE_CLASS2(feathers,text,TextFormat)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,utils,IExternalizable)



class HXCPP_CLASS_ATTRIBUTES TVShowsLayoutGroup_obj : public  ::feathers::controls::LayoutGroup_obj
{
	public:
		typedef  ::feathers::controls::LayoutGroup_obj super;
		typedef TVShowsLayoutGroup_obj OBJ_;
		TVShowsLayoutGroup_obj();

	public:
		enum { _hx_ClassId = 0x06fd6b61 };

		void __construct( ::feathers::data::ArrayCollection tvShows, ::feathers::controls::LayoutGroup tabsContainer,int cellsInRow,int cellWidth,int cellHeight,int cellStartXPosition,int cellStartYPosition,int previewWidth,int previewHeight,int previewX,int previewY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="TVShowsLayoutGroup")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"TVShowsLayoutGroup"); }
		static ::hx::ObjectPtr< TVShowsLayoutGroup_obj > __new( ::feathers::data::ArrayCollection tvShows, ::feathers::controls::LayoutGroup tabsContainer,int cellsInRow,int cellWidth,int cellHeight,int cellStartXPosition,int cellStartYPosition,int previewWidth,int previewHeight,int previewX,int previewY);
		static ::hx::ObjectPtr< TVShowsLayoutGroup_obj > __alloc(::hx::Ctx *_hx_ctx, ::feathers::data::ArrayCollection tvShows, ::feathers::controls::LayoutGroup tabsContainer,int cellsInRow,int cellWidth,int cellHeight,int cellStartXPosition,int cellStartYPosition,int previewWidth,int previewHeight,int previewX,int previewY);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TVShowsLayoutGroup_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TVShowsLayoutGroup",a1,88,39,af); }

		static void __boot();
		static ::String IMG_DIR_PATH;
		 ::feathers::controls::LayoutGroup container;
		 ::feathers::data::ArrayCollection tvShows;
		int cellsInRow;
		int cellWidth;
		int cellHeight;
		int cellStartXPosition;
		int cellStartYPosition;
		int previewWidth;
		int previewHeight;
		int previewX;
		int previewY;
		int previewInfoStartXPosition;
		int previewInfoStartYPosition;
		int activePreviewIndex;
		int activePreviewInfoIndex;
		void printTVShowsGrid();
		::Dynamic printTVShowsGrid_dyn();

		void drawCell( ::TVShow tvShow,int x,int y);
		::Dynamic drawCell_dyn();

		void printTVShowInfoOnPreview( ::TVShow tvShow);
		::Dynamic printTVShowInfoOnPreview_dyn();

		void addLabel( ::feathers::controls::LayoutGroup layoutGroup,::String text, ::feathers::text::TextFormat textFormat,int x,int y);
		::Dynamic addLabel_dyn();

		void addTextField( ::feathers::controls::LayoutGroup layoutGroup,::String text, ::feathers::text::TextFormat textFormat,int x,int y,int width,int height);
		::Dynamic addTextField_dyn();

};


#endif /* INCLUDED_TVShowsLayoutGroup */ 
