// Generated by Haxe 4.3.2
#ifndef INCLUDED_TVShowsView
#define INCLUDED_TVShowsView

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(TVShowsView)
HX_DECLARE_CLASS0(TabDto)
HX_DECLARE_CLASS2(feathers,controls,LayoutGroup)
HX_DECLARE_CLASS2(feathers,core,FeathersControl)
HX_DECLARE_CLASS2(feathers,core,IDisplayObject)
HX_DECLARE_CLASS2(feathers,core,IMeasureObject)
HX_DECLARE_CLASS2(feathers,core,IUIControl)
HX_DECLARE_CLASS2(feathers,core,IValidating)
HX_DECLARE_CLASS2(feathers,core,MeasureSprite)
HX_DECLARE_CLASS2(feathers,core,ValidatingSprite)
HX_DECLARE_CLASS2(feathers,data,ArrayCollection)
HX_DECLARE_CLASS2(feathers,data,IFlatCollection)
HX_DECLARE_CLASS2(feathers,layout,ILayoutObject)
HX_DECLARE_CLASS2(feathers,style,IStyleObject)
HX_DECLARE_CLASS2(feathers,style,IVariantStyleObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,utils,IExternalizable)



class HXCPP_CLASS_ATTRIBUTES TVShowsView_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TVShowsView_obj OBJ_;
		TVShowsView_obj();

	public:
		enum { _hx_ClassId = 0x4241a5b9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="TVShowsView")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"TVShowsView"); }

		inline static ::hx::ObjectPtr< TVShowsView_obj > __new() {
			::hx::ObjectPtr< TVShowsView_obj > __this = new TVShowsView_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TVShowsView_obj > __alloc(::hx::Ctx *_hx_ctx) {
			TVShowsView_obj *__this = (TVShowsView_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TVShowsView_obj), false, "TVShowsView"));
			*(void **)__this = TVShowsView_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TVShowsView_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TVShowsView",79,60,46,8f); }

		static  ::TabDto getTVShowsTabDto( ::feathers::data::ArrayCollection tvShows, ::feathers::controls::LayoutGroup container,int cellsInRow,int cellWidth,int cellHeight,int cellStartXPosition,int cellStartYPosition,int previewWidth,int previewHeight,int previewX,int previewY);
		static ::Dynamic getTVShowsTabDto_dyn();

};


#endif /* INCLUDED_TVShowsView */ 
