// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_TVShow
#include <TVShow.h>
#endif
#ifndef INCLUDED_TVShowBuilder
#include <TVShowBuilder.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c0650bdd1897b58c_14_new,"TVShowBuilder","new",0x3924002e,"TVShowBuilder.new","TVShow.hx",14,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_16_withShowId,"TVShowBuilder","withShowId",0xdcf5c6d0,"TVShowBuilder.withShowId","TVShow.hx",16,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_21_withChannelId,"TVShowBuilder","withChannelId",0x943bede6,"TVShowBuilder.withChannelId","TVShow.hx",21,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_26_withShowName,"TVShowBuilder","withShowName",0x5e5d4480,"TVShowBuilder.withShowName","TVShow.hx",26,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_31_withYear,"TVShowBuilder","withYear",0x1b9dac55,"TVShowBuilder.withYear","TVShow.hx",31,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_36_withDescription,"TVShowBuilder","withDescription",0x571b2964,"TVShowBuilder.withDescription","TVShow.hx",36,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_41_withStartDate,"TVShowBuilder","withStartDate",0x69ac8618,"TVShowBuilder.withStartDate","TVShow.hx",41,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_46_withEndDate,"TVShowBuilder","withEndDate",0x2303dc11,"TVShowBuilder.withEndDate","TVShow.hx",46,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_51_withImgName,"TVShowBuilder","withImgName",0x23ce3456,"TVShowBuilder.withImgName","TVShow.hx",51,0xb701dc7f)
HX_LOCAL_STACK_FRAME(_hx_pos_c0650bdd1897b58c_57_build,"TVShowBuilder","build",0xec011a7c,"TVShowBuilder.build","TVShow.hx",57,0xb701dc7f)

void TVShowBuilder_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_14_new)
            	}

Dynamic TVShowBuilder_obj::__CreateEmpty() { return new TVShowBuilder_obj; }

void *TVShowBuilder_obj::_hx_vtable = 0;

Dynamic TVShowBuilder_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TVShowBuilder_obj > _hx_result = new TVShowBuilder_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TVShowBuilder_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0648267c;
}

 ::TVShowBuilder TVShowBuilder_obj::withShowId(int showId){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_16_withShowId)
HXLINE(  17)		this->showId = showId;
HXLINE(  18)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withShowId,return )

 ::TVShowBuilder TVShowBuilder_obj::withChannelId(int channelId){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_21_withChannelId)
HXLINE(  22)		this->channelId = channelId;
HXLINE(  23)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withChannelId,return )

 ::TVShowBuilder TVShowBuilder_obj::withShowName(::String showName){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_26_withShowName)
HXLINE(  27)		this->showName = showName;
HXLINE(  28)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withShowName,return )

 ::TVShowBuilder TVShowBuilder_obj::withYear(int year){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_31_withYear)
HXLINE(  32)		this->year = year;
HXLINE(  33)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withYear,return )

 ::TVShowBuilder TVShowBuilder_obj::withDescription(::String description){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_36_withDescription)
HXLINE(  37)		this->description = description;
HXLINE(  38)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withDescription,return )

 ::TVShowBuilder TVShowBuilder_obj::withStartDate(Float startDate){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_41_withStartDate)
HXLINE(  42)		this->startDate = startDate;
HXLINE(  43)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withStartDate,return )

 ::TVShowBuilder TVShowBuilder_obj::withEndDate(Float endDate){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_46_withEndDate)
HXLINE(  47)		this->endDate = endDate;
HXLINE(  48)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withEndDate,return )

 ::TVShowBuilder TVShowBuilder_obj::withImgName(::String imgName){
            	HX_STACKFRAME(&_hx_pos_c0650bdd1897b58c_51_withImgName)
HXLINE(  52)		this->imgName = imgName;
HXLINE(  53)		return ::hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TVShowBuilder_obj,withImgName,return )

 ::TVShow TVShowBuilder_obj::build(){
            	HX_GC_STACKFRAME(&_hx_pos_c0650bdd1897b58c_57_build)
HXDLIN(  57)		return  ::TVShow_obj::__alloc( HX_CTX ,this->showId,this->channelId,this->showName,this->year,this->description,this->startDate,this->endDate,this->imgName);
            	}


HX_DEFINE_DYNAMIC_FUNC0(TVShowBuilder_obj,build,return )


::hx::ObjectPtr< TVShowBuilder_obj > TVShowBuilder_obj::__new() {
	::hx::ObjectPtr< TVShowBuilder_obj > __this = new TVShowBuilder_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< TVShowBuilder_obj > TVShowBuilder_obj::__alloc(::hx::Ctx *_hx_ctx) {
	TVShowBuilder_obj *__this = (TVShowBuilder_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TVShowBuilder_obj), true, "TVShowBuilder"));
	*(void **)__this = TVShowBuilder_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TVShowBuilder_obj::TVShowBuilder_obj()
{
}

void TVShowBuilder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TVShowBuilder);
	HX_MARK_MEMBER_NAME(showId,"showId");
	HX_MARK_MEMBER_NAME(channelId,"channelId");
	HX_MARK_MEMBER_NAME(showName,"showName");
	HX_MARK_MEMBER_NAME(year,"year");
	HX_MARK_MEMBER_NAME(description,"description");
	HX_MARK_MEMBER_NAME(imgName,"imgName");
	HX_MARK_MEMBER_NAME(startDate,"startDate");
	HX_MARK_MEMBER_NAME(endDate,"endDate");
	HX_MARK_END_CLASS();
}

void TVShowBuilder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(showId,"showId");
	HX_VISIT_MEMBER_NAME(channelId,"channelId");
	HX_VISIT_MEMBER_NAME(showName,"showName");
	HX_VISIT_MEMBER_NAME(year,"year");
	HX_VISIT_MEMBER_NAME(description,"description");
	HX_VISIT_MEMBER_NAME(imgName,"imgName");
	HX_VISIT_MEMBER_NAME(startDate,"startDate");
	HX_VISIT_MEMBER_NAME(endDate,"endDate");
}

::hx::Val TVShowBuilder_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"year") ) { return ::hx::Val( year ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"build") ) { return ::hx::Val( build_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"showId") ) { return ::hx::Val( showId ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"imgName") ) { return ::hx::Val( imgName ); }
		if (HX_FIELD_EQ(inName,"endDate") ) { return ::hx::Val( endDate ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"showName") ) { return ::hx::Val( showName ); }
		if (HX_FIELD_EQ(inName,"withYear") ) { return ::hx::Val( withYear_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"channelId") ) { return ::hx::Val( channelId ); }
		if (HX_FIELD_EQ(inName,"startDate") ) { return ::hx::Val( startDate ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"withShowId") ) { return ::hx::Val( withShowId_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"description") ) { return ::hx::Val( description ); }
		if (HX_FIELD_EQ(inName,"withEndDate") ) { return ::hx::Val( withEndDate_dyn() ); }
		if (HX_FIELD_EQ(inName,"withImgName") ) { return ::hx::Val( withImgName_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"withShowName") ) { return ::hx::Val( withShowName_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"withChannelId") ) { return ::hx::Val( withChannelId_dyn() ); }
		if (HX_FIELD_EQ(inName,"withStartDate") ) { return ::hx::Val( withStartDate_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"withDescription") ) { return ::hx::Val( withDescription_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TVShowBuilder_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"year") ) { year=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"showId") ) { showId=inValue.Cast< int >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"imgName") ) { imgName=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"endDate") ) { endDate=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"showName") ) { showName=inValue.Cast< ::String >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"channelId") ) { channelId=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"startDate") ) { startDate=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"description") ) { description=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TVShowBuilder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("showId",38,0e,70,26));
	outFields->push(HX_("channelId",7e,37,e6,25));
	outFields->push(HX_("showName",e8,35,86,b0));
	outFields->push(HX_("year",bd,c9,47,50));
	outFields->push(HX_("description",fc,08,1d,5f));
	outFields->push(HX_("imgName",ee,67,52,25));
	outFields->push(HX_("startDate",b0,cf,56,fb));
	outFields->push(HX_("endDate",a9,0f,88,24));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TVShowBuilder_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(TVShowBuilder_obj,showId),HX_("showId",38,0e,70,26)},
	{::hx::fsInt,(int)offsetof(TVShowBuilder_obj,channelId),HX_("channelId",7e,37,e6,25)},
	{::hx::fsString,(int)offsetof(TVShowBuilder_obj,showName),HX_("showName",e8,35,86,b0)},
	{::hx::fsInt,(int)offsetof(TVShowBuilder_obj,year),HX_("year",bd,c9,47,50)},
	{::hx::fsString,(int)offsetof(TVShowBuilder_obj,description),HX_("description",fc,08,1d,5f)},
	{::hx::fsString,(int)offsetof(TVShowBuilder_obj,imgName),HX_("imgName",ee,67,52,25)},
	{::hx::fsFloat,(int)offsetof(TVShowBuilder_obj,startDate),HX_("startDate",b0,cf,56,fb)},
	{::hx::fsFloat,(int)offsetof(TVShowBuilder_obj,endDate),HX_("endDate",a9,0f,88,24)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TVShowBuilder_obj_sStaticStorageInfo = 0;
#endif

static ::String TVShowBuilder_obj_sMemberFields[] = {
	HX_("showId",38,0e,70,26),
	HX_("channelId",7e,37,e6,25),
	HX_("showName",e8,35,86,b0),
	HX_("year",bd,c9,47,50),
	HX_("description",fc,08,1d,5f),
	HX_("imgName",ee,67,52,25),
	HX_("startDate",b0,cf,56,fb),
	HX_("endDate",a9,0f,88,24),
	HX_("withShowId",de,40,3a,12),
	HX_("withChannelId",98,b0,c0,ae),
	HX_("withShowName",0e,de,3e,c9),
	HX_("withYear",e3,e6,f3,22),
	HX_("withDescription",96,7c,5b,ae),
	HX_("withStartDate",ca,48,31,84),
	HX_("withEndDate",43,2e,aa,89),
	HX_("withImgName",88,86,74,8a),
	HX_("build",2e,db,ea,ba),
	::String(null()) };

::hx::Class TVShowBuilder_obj::__mClass;

void TVShowBuilder_obj::__register()
{
	TVShowBuilder_obj _hx_dummy;
	TVShowBuilder_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("TVShowBuilder",3c,11,01,2a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TVShowBuilder_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TVShowBuilder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TVShowBuilder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TVShowBuilder_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

