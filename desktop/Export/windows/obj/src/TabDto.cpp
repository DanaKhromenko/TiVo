// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_TabDto
#include <TabDto.h>
#endif
#ifndef INCLUDED_feathers_controls_LayoutGroup
#include <feathers/controls/LayoutGroup.h>
#endif
#ifndef INCLUDED_feathers_controls_navigators_TabItem
#include <feathers/controls/navigators/TabItem.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_162f3d6f3f2a3361_10_new,"TabDto","new",0x6087399c,"TabDto.new","TabDto.hx",10,0x12cced54)

void TabDto_obj::__construct( ::feathers::controls::navigators::TabItem tabItem, ::feathers::controls::LayoutGroup container){
            	HX_STACKFRAME(&_hx_pos_162f3d6f3f2a3361_10_new)
HXLINE(  11)		this->tabItem = tabItem;
HXLINE(  12)		this->container = container;
            	}

Dynamic TabDto_obj::__CreateEmpty() { return new TabDto_obj; }

void *TabDto_obj::_hx_vtable = 0;

Dynamic TabDto_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TabDto_obj > _hx_result = new TabDto_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool TabDto_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x121e3e6a;
}


::hx::ObjectPtr< TabDto_obj > TabDto_obj::__new( ::feathers::controls::navigators::TabItem tabItem, ::feathers::controls::LayoutGroup container) {
	::hx::ObjectPtr< TabDto_obj > __this = new TabDto_obj();
	__this->__construct(tabItem,container);
	return __this;
}

::hx::ObjectPtr< TabDto_obj > TabDto_obj::__alloc(::hx::Ctx *_hx_ctx, ::feathers::controls::navigators::TabItem tabItem, ::feathers::controls::LayoutGroup container) {
	TabDto_obj *__this = (TabDto_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TabDto_obj), true, "TabDto"));
	*(void **)__this = TabDto_obj::_hx_vtable;
	__this->__construct(tabItem,container);
	return __this;
}

TabDto_obj::TabDto_obj()
{
}

void TabDto_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TabDto);
	HX_MARK_MEMBER_NAME(tabItem,"tabItem");
	HX_MARK_MEMBER_NAME(container,"container");
	HX_MARK_END_CLASS();
}

void TabDto_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(tabItem,"tabItem");
	HX_VISIT_MEMBER_NAME(container,"container");
}

::hx::Val TabDto_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"tabItem") ) { return ::hx::Val( tabItem ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"container") ) { return ::hx::Val( container ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val TabDto_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"tabItem") ) { tabItem=inValue.Cast<  ::feathers::controls::navigators::TabItem >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"container") ) { container=inValue.Cast<  ::feathers::controls::LayoutGroup >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TabDto_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("tabItem",08,9a,35,3e));
	outFields->push(HX_("container",41,75,73,bf));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo TabDto_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::feathers::controls::navigators::TabItem */ ,(int)offsetof(TabDto_obj,tabItem),HX_("tabItem",08,9a,35,3e)},
	{::hx::fsObject /*  ::feathers::controls::LayoutGroup */ ,(int)offsetof(TabDto_obj,container),HX_("container",41,75,73,bf)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *TabDto_obj_sStaticStorageInfo = 0;
#endif

static ::String TabDto_obj_sMemberFields[] = {
	HX_("tabItem",08,9a,35,3e),
	HX_("container",41,75,73,bf),
	::String(null()) };

::hx::Class TabDto_obj::__mClass;

void TabDto_obj::__register()
{
	TabDto_obj _hx_dummy;
	TabDto_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("TabDto",aa,7b,d3,b0);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(TabDto_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< TabDto_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TabDto_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TabDto_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

