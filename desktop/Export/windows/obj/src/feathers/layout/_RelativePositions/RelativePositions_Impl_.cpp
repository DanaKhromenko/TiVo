// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_feathers_layout_RelativePosition
#include <feathers/layout/RelativePosition.h>
#endif
#ifndef INCLUDED_feathers_layout__RelativePositions_RelativePositions_Impl_
#include <feathers/layout/_RelativePositions/RelativePositions_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8f14bc3f56266c94_18__new,"feathers.layout._RelativePositions.RelativePositions_Impl_","_new",0x2430837a,"feathers.layout._RelativePositions.RelativePositions_Impl_._new","feathers/layout/RelativePositions.hx",18,0x0f4a6246)
HX_LOCAL_STACK_FRAME(_hx_pos_8f14bc3f56266c94_29_fromRelativePosition,"feathers.layout._RelativePositions.RelativePositions_Impl_","fromRelativePosition",0x76262b38,"feathers.layout._RelativePositions.RelativePositions_Impl_.fromRelativePosition","feathers/layout/RelativePositions.hx",29,0x0f4a6246)
namespace feathers{
namespace layout{
namespace _RelativePositions{

void RelativePositions_Impl__obj::__construct() { }

Dynamic RelativePositions_Impl__obj::__CreateEmpty() { return new RelativePositions_Impl__obj; }

void *RelativePositions_Impl__obj::_hx_vtable = 0;

Dynamic RelativePositions_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< RelativePositions_Impl__obj > _hx_result = new RelativePositions_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool RelativePositions_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6ed411a5;
}

::Array< ::Dynamic> RelativePositions_Impl__obj::_new(::Array< ::Dynamic> positions){
            	HX_STACKFRAME(&_hx_pos_8f14bc3f56266c94_18__new)
HXDLIN(  18)		return positions;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(RelativePositions_Impl__obj,_new,return )

::Array< ::Dynamic> RelativePositions_Impl__obj::fromRelativePosition( ::feathers::layout::RelativePosition position){
            	HX_STACKFRAME(&_hx_pos_8f14bc3f56266c94_29_fromRelativePosition)
HXDLIN(  29)		return ::Array_obj< ::Dynamic>::__new(1)->init(0,position);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(RelativePositions_Impl__obj,fromRelativePosition,return )


RelativePositions_Impl__obj::RelativePositions_Impl__obj()
{
}

bool RelativePositions_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"fromRelativePosition") ) { outValue = fromRelativePosition_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *RelativePositions_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *RelativePositions_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class RelativePositions_Impl__obj::__mClass;

static ::String RelativePositions_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("fromRelativePosition",1f,3b,09,11),
	::String(null())
};

void RelativePositions_Impl__obj::__register()
{
	RelativePositions_Impl__obj _hx_dummy;
	RelativePositions_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.layout._RelativePositions.RelativePositions_Impl_",f5,a8,8b,09);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &RelativePositions_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(RelativePositions_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< RelativePositions_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = RelativePositions_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = RelativePositions_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace layout
} // end namespace _RelativePositions
