// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_feathers_controls_Callout
#include <feathers/controls/Callout.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IStateObserver
#include <feathers/core/IStateObserver.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_graphics_FillStyle
#include <feathers/graphics/FillStyle.h>
#endif
#ifndef INCLUDED_feathers_graphics_LineStyle
#include <feathers/graphics/LineStyle.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_layout_RelativePosition
#include <feathers/layout/RelativePosition.h>
#endif
#ifndef INCLUDED_feathers_skins_BaseGraphicsPathSkin
#include <feathers/skins/BaseGraphicsPathSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_IProgrammaticSkin
#include <feathers/skins/IProgrammaticSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_ProgrammaticSkin
#include <feathers/skins/ProgrammaticSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_RectangleSkin
#include <feathers/skins/RectangleSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_TriangleSkin
#include <feathers/skins/TriangleSkin.h>
#endif
#ifndef INCLUDED_feathers_style_ClassVariantStyleProvider
#include <feathers/style/ClassVariantStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_IDarkModeTheme
#include <feathers/style/IDarkModeTheme.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleProvider
#include <feathers/style/IStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_Theme
#include <feathers/style/Theme.h>
#endif
#ifndef INCLUDED_feathers_themes_ClassVariantTheme
#include <feathers/themes/ClassVariantTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_BaseSteelTheme
#include <feathers/themes/steel/BaseSteelTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_components_SteelCalloutStyles
#include <feathers/themes/steel/components/SteelCalloutStyles.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e2e18c78e4826dbe_26_initialize,"feathers.themes.steel.components.SteelCalloutStyles","initialize",0x6094e768,"feathers.themes.steel.components.SteelCalloutStyles.initialize","feathers/themes/steel/components/SteelCalloutStyles.hx",26,0x8ec371a8)
HX_LOCAL_STACK_FRAME(_hx_pos_e2e18c78e4826dbe_36_initialize,"feathers.themes.steel.components.SteelCalloutStyles","initialize",0x6094e768,"feathers.themes.steel.components.SteelCalloutStyles.initialize","feathers/themes/steel/components/SteelCalloutStyles.hx",36,0x8ec371a8)
namespace feathers{
namespace themes{
namespace steel{
namespace components{

void SteelCalloutStyles_obj::__construct() { }

Dynamic SteelCalloutStyles_obj::__CreateEmpty() { return new SteelCalloutStyles_obj; }

void *SteelCalloutStyles_obj::_hx_vtable = 0;

Dynamic SteelCalloutStyles_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SteelCalloutStyles_obj > _hx_result = new SteelCalloutStyles_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SteelCalloutStyles_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x44910f6e;
}

void SteelCalloutStyles_obj::initialize( ::feathers::themes::steel::BaseSteelTheme theme){
            	HX_STACKFRAME(&_hx_pos_e2e18c78e4826dbe_26_initialize)
HXDLIN(  26)		::Array< ::Dynamic> theme1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,theme);
HXLINE(  27)		if (::hx::IsNull( theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >() )) {
HXLINE(  28)			theme1[0] = ( ( ::feathers::themes::steel::BaseSteelTheme)(::Std_obj::downcast(::feathers::style::Theme_obj::get_fallbackTheme(),::hx::ClassOf< ::feathers::themes::steel::BaseSteelTheme >())) );
            		}
HXLINE(  30)		if (::hx::IsNull( theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >() )) {
HXLINE(  31)			return;
            		}
HXLINE(  34)		 ::feathers::style::ClassVariantStyleProvider styleProvider = theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->styleProvider;
HXLINE(  35)		if (::hx::IsNull( styleProvider->getStyleFunction(::hx::ClassOf< ::feathers::controls::Callout >(),null()) )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,theme1) HXARGC(1)
            			void _hx_run( ::feathers::controls::Callout callout){
            				HX_GC_STACKFRAME(&_hx_pos_e2e18c78e4826dbe_36_initialize)
HXLINE(  37)				if (::hx::IsNull( callout->get_backgroundSkin() )) {
HXLINE(  38)					 ::feathers::skins::RectangleSkin backgroundSkin =  ::feathers::skins::RectangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  39)					backgroundSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  40)					backgroundSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  41)					callout->set_backgroundSkin(backgroundSkin);
            				}
HXLINE(  43)				if (::hx::IsNull( callout->get_topArrowSkin() )) {
HXLINE(  44)					 ::feathers::skins::TriangleSkin topArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  45)					topArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::TOP_dyn());
HXLINE(  46)					topArrowSkin->set_drawBaseBorder(false);
HXLINE(  47)					topArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  48)					topArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  49)					topArrowSkin->set_width(((Float)14.0));
HXLINE(  50)					topArrowSkin->set_height(((Float)8.0));
HXLINE(  51)					callout->set_topArrowSkin(topArrowSkin);
            				}
HXLINE(  53)				if (::hx::IsNull( callout->get_rightArrowSkin() )) {
HXLINE(  54)					 ::feathers::skins::TriangleSkin rightArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  55)					rightArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::RIGHT_dyn());
HXLINE(  56)					rightArrowSkin->set_drawBaseBorder(false);
HXLINE(  57)					rightArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  58)					rightArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  59)					rightArrowSkin->set_width(((Float)8.0));
HXLINE(  60)					rightArrowSkin->set_height(((Float)14.0));
HXLINE(  61)					callout->set_rightArrowSkin(rightArrowSkin);
            				}
HXLINE(  63)				if (::hx::IsNull( callout->get_bottomArrowSkin() )) {
HXLINE(  64)					 ::feathers::skins::TriangleSkin bottomArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  65)					bottomArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::BOTTOM_dyn());
HXLINE(  66)					bottomArrowSkin->set_drawBaseBorder(false);
HXLINE(  67)					bottomArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  68)					bottomArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  69)					bottomArrowSkin->set_width(((Float)14.0));
HXLINE(  70)					bottomArrowSkin->set_height(((Float)8.0));
HXLINE(  71)					callout->set_bottomArrowSkin(bottomArrowSkin);
            				}
HXLINE(  73)				if (::hx::IsNull( callout->get_leftArrowSkin() )) {
HXLINE(  74)					 ::feathers::skins::TriangleSkin leftArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  75)					leftArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::LEFT_dyn());
HXLINE(  76)					leftArrowSkin->set_drawBaseBorder(false);
HXLINE(  77)					leftArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  78)					leftArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  79)					leftArrowSkin->set_width(((Float)8.0));
HXLINE(  80)					leftArrowSkin->set_height(((Float)14.0));
HXLINE(  81)					callout->set_leftArrowSkin(leftArrowSkin);
            				}
HXLINE(  84)				callout->set_topArrowGap(((Float)-1.0));
HXLINE(  85)				callout->set_rightArrowGap(((Float)-1.0));
HXLINE(  86)				callout->set_bottomArrowGap(((Float)-1.0));
HXLINE(  87)				callout->set_leftArrowGap(((Float)-1.0));
HXLINE(  89)				callout->set_paddingTop(((Float)1.0));
HXLINE(  90)				callout->set_paddingRight(((Float)1.0));
HXLINE(  91)				callout->set_paddingBottom(((Float)1.0));
HXLINE(  92)				callout->set_paddingLeft(((Float)1.0));
HXLINE(  94)				callout->set_marginTop(((Float)10.0));
HXLINE(  95)				callout->set_marginRight(((Float)10.0));
HXLINE(  96)				callout->set_marginBottom(((Float)10.0));
HXLINE(  97)				callout->set_marginLeft(((Float)10.0));
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  36)			styleProvider->setStyleFunction(::hx::ClassOf< ::feathers::controls::Callout >(),null(), ::Dynamic(new _hx_Closure_0(theme1)));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SteelCalloutStyles_obj,initialize,(void))


SteelCalloutStyles_obj::SteelCalloutStyles_obj()
{
}

bool SteelCalloutStyles_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"initialize") ) { outValue = initialize_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SteelCalloutStyles_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SteelCalloutStyles_obj_sStaticStorageInfo = 0;
#endif

::hx::Class SteelCalloutStyles_obj::__mClass;

static ::String SteelCalloutStyles_obj_sStaticFields[] = {
	HX_("initialize",50,31,bb,ec),
	::String(null())
};

void SteelCalloutStyles_obj::__register()
{
	SteelCalloutStyles_obj _hx_dummy;
	SteelCalloutStyles_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.themes.steel.components.SteelCalloutStyles",56,43,3d,e3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SteelCalloutStyles_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SteelCalloutStyles_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SteelCalloutStyles_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SteelCalloutStyles_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SteelCalloutStyles_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace themes
} // end namespace steel
} // end namespace components
