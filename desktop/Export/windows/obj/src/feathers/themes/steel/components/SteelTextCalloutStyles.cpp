// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_feathers_controls_Callout
#include <feathers/controls/Callout.h>
#endif
#ifndef INCLUDED_feathers_controls_TextCallout
#include <feathers/controls/TextCallout.h>
#endif
#ifndef INCLUDED_feathers_core_FeathersControl
#include <feathers/core/FeathersControl.h>
#endif
#ifndef INCLUDED_feathers_core_IDisplayObject
#include <feathers/core/IDisplayObject.h>
#endif
#ifndef INCLUDED_feathers_core_IHTMLTextControl
#include <feathers/core/IHTMLTextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IMeasureObject
#include <feathers/core/IMeasureObject.h>
#endif
#ifndef INCLUDED_feathers_core_IStateObserver
#include <feathers/core/IStateObserver.h>
#endif
#ifndef INCLUDED_feathers_core_ITextControl
#include <feathers/core/ITextControl.h>
#endif
#ifndef INCLUDED_feathers_core_IUIControl
#include <feathers/core/IUIControl.h>
#endif
#ifndef INCLUDED_feathers_core_IValidating
#include <feathers/core/IValidating.h>
#endif
#ifndef INCLUDED_feathers_core_MeasureSprite
#include <feathers/core/MeasureSprite.h>
#endif
#ifndef INCLUDED_feathers_core_ValidatingSprite
#include <feathers/core/ValidatingSprite.h>
#endif
#ifndef INCLUDED_feathers_graphics_FillStyle
#include <feathers/graphics/FillStyle.h>
#endif
#ifndef INCLUDED_feathers_graphics_LineStyle
#include <feathers/graphics/LineStyle.h>
#endif
#ifndef INCLUDED_feathers_layout_ILayoutObject
#include <feathers/layout/ILayoutObject.h>
#endif
#ifndef INCLUDED_feathers_layout_RelativePosition
#include <feathers/layout/RelativePosition.h>
#endif
#ifndef INCLUDED_feathers_skins_BaseGraphicsPathSkin
#include <feathers/skins/BaseGraphicsPathSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_IProgrammaticSkin
#include <feathers/skins/IProgrammaticSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_ProgrammaticSkin
#include <feathers/skins/ProgrammaticSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_RectangleSkin
#include <feathers/skins/RectangleSkin.h>
#endif
#ifndef INCLUDED_feathers_skins_TriangleSkin
#include <feathers/skins/TriangleSkin.h>
#endif
#ifndef INCLUDED_feathers_style_ClassVariantStyleProvider
#include <feathers/style/ClassVariantStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_IDarkModeTheme
#include <feathers/style/IDarkModeTheme.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleObject
#include <feathers/style/IStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_IStyleProvider
#include <feathers/style/IStyleProvider.h>
#endif
#ifndef INCLUDED_feathers_style_ITheme
#include <feathers/style/ITheme.h>
#endif
#ifndef INCLUDED_feathers_style_IVariantStyleObject
#include <feathers/style/IVariantStyleObject.h>
#endif
#ifndef INCLUDED_feathers_style_Theme
#include <feathers/style/Theme.h>
#endif
#ifndef INCLUDED_feathers_text_TextFormat
#include <feathers/text/TextFormat.h>
#endif
#ifndef INCLUDED_feathers_themes_ClassVariantTheme
#include <feathers/themes/ClassVariantTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_BaseSteelTheme
#include <feathers/themes/steel/BaseSteelTheme.h>
#endif
#ifndef INCLUDED_feathers_themes_steel_components_SteelTextCalloutStyles
#include <feathers/themes/steel/components/SteelTextCalloutStyles.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_cd97f16d6200cc0e_25_initialize,"feathers.themes.steel.components.SteelTextCalloutStyles","initialize",0xd407cd35,"feathers.themes.steel.components.SteelTextCalloutStyles.initialize","feathers/themes/steel/components/SteelTextCalloutStyles.hx",25,0x9cdb8275)
HX_LOCAL_STACK_FRAME(_hx_pos_cd97f16d6200cc0e_35_initialize,"feathers.themes.steel.components.SteelTextCalloutStyles","initialize",0xd407cd35,"feathers.themes.steel.components.SteelTextCalloutStyles.initialize","feathers/themes/steel/components/SteelTextCalloutStyles.hx",35,0x9cdb8275)
HX_LOCAL_STACK_FRAME(_hx_pos_cd97f16d6200cc0e_106_initialize,"feathers.themes.steel.components.SteelTextCalloutStyles","initialize",0xd407cd35,"feathers.themes.steel.components.SteelTextCalloutStyles.initialize","feathers/themes/steel/components/SteelTextCalloutStyles.hx",106,0x9cdb8275)
namespace feathers{
namespace themes{
namespace steel{
namespace components{

void SteelTextCalloutStyles_obj::__construct() { }

Dynamic SteelTextCalloutStyles_obj::__CreateEmpty() { return new SteelTextCalloutStyles_obj; }

void *SteelTextCalloutStyles_obj::_hx_vtable = 0;

Dynamic SteelTextCalloutStyles_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< SteelTextCalloutStyles_obj > _hx_result = new SteelTextCalloutStyles_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SteelTextCalloutStyles_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x34ba5881;
}

void SteelTextCalloutStyles_obj::initialize( ::feathers::themes::steel::BaseSteelTheme theme){
            	HX_STACKFRAME(&_hx_pos_cd97f16d6200cc0e_25_initialize)
HXDLIN(  25)		::Array< ::Dynamic> theme1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,theme);
HXLINE(  26)		if (::hx::IsNull( theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >() )) {
HXLINE(  27)			theme1[0] = ( ( ::feathers::themes::steel::BaseSteelTheme)(::Std_obj::downcast(::feathers::style::Theme_obj::get_fallbackTheme(),::hx::ClassOf< ::feathers::themes::steel::BaseSteelTheme >())) );
            		}
HXLINE(  29)		if (::hx::IsNull( theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >() )) {
HXLINE(  30)			return;
            		}
HXLINE(  33)		 ::feathers::style::ClassVariantStyleProvider styleProvider = theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->styleProvider;
HXLINE(  34)		if (::hx::IsNull( styleProvider->getStyleFunction(::hx::ClassOf< ::feathers::controls::TextCallout >(),null()) )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,theme1) HXARGC(1)
            			void _hx_run( ::feathers::controls::TextCallout callout){
            				HX_GC_STACKFRAME(&_hx_pos_cd97f16d6200cc0e_35_initialize)
HXLINE(  36)				if (::hx::IsNull( callout->get_textFormat() )) {
HXLINE(  37)					callout->set_textFormat(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getTextFormat(null()));
            				}
HXLINE(  39)				if (::hx::IsNull( callout->get_disabledTextFormat() )) {
HXLINE(  40)					callout->set_disabledTextFormat(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDisabledTextFormat(null()));
            				}
HXLINE(  42)				if (::hx::IsNull( callout->get_backgroundSkin() )) {
HXLINE(  43)					 ::feathers::skins::RectangleSkin backgroundSkin =  ::feathers::skins::RectangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  44)					backgroundSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  45)					backgroundSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  46)					callout->set_backgroundSkin(backgroundSkin);
            				}
HXLINE(  48)				if (::hx::IsNull( callout->get_topArrowSkin() )) {
HXLINE(  49)					 ::feathers::skins::TriangleSkin topArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  50)					topArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::TOP_dyn());
HXLINE(  51)					topArrowSkin->set_drawBaseBorder(false);
HXLINE(  52)					topArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  53)					topArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  54)					topArrowSkin->set_width(((Float)10.0));
HXLINE(  55)					topArrowSkin->set_height(((Float)6.0));
HXLINE(  56)					callout->set_topArrowSkin(topArrowSkin);
            				}
HXLINE(  58)				if (::hx::IsNull( callout->get_rightArrowSkin() )) {
HXLINE(  59)					 ::feathers::skins::TriangleSkin rightArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  60)					rightArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::RIGHT_dyn());
HXLINE(  61)					rightArrowSkin->set_drawBaseBorder(false);
HXLINE(  62)					rightArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  63)					rightArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  64)					rightArrowSkin->set_width(((Float)6.0));
HXLINE(  65)					rightArrowSkin->set_height(((Float)10.0));
HXLINE(  66)					callout->set_rightArrowSkin(rightArrowSkin);
            				}
HXLINE(  68)				if (::hx::IsNull( callout->get_bottomArrowSkin() )) {
HXLINE(  69)					 ::feathers::skins::TriangleSkin bottomArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  70)					bottomArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::BOTTOM_dyn());
HXLINE(  71)					bottomArrowSkin->set_drawBaseBorder(false);
HXLINE(  72)					bottomArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  73)					bottomArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  74)					bottomArrowSkin->set_width(((Float)10.0));
HXLINE(  75)					bottomArrowSkin->set_height(((Float)6.0));
HXLINE(  76)					callout->set_bottomArrowSkin(bottomArrowSkin);
            				}
HXLINE(  78)				if (::hx::IsNull( callout->get_leftArrowSkin() )) {
HXLINE(  79)					 ::feathers::skins::TriangleSkin leftArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  80)					leftArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::LEFT_dyn());
HXLINE(  81)					leftArrowSkin->set_drawBaseBorder(false);
HXLINE(  82)					leftArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerFill());
HXLINE(  83)					leftArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getContainerBorder(null()));
HXLINE(  84)					leftArrowSkin->set_width(((Float)6.0));
HXLINE(  85)					leftArrowSkin->set_height(((Float)10.0));
HXLINE(  86)					callout->set_leftArrowSkin(leftArrowSkin);
            				}
HXLINE(  89)				callout->set_topArrowGap(((Float)-1.0));
HXLINE(  90)				callout->set_rightArrowGap(((Float)-1.0));
HXLINE(  91)				callout->set_bottomArrowGap(((Float)-1.0));
HXLINE(  92)				callout->set_leftArrowGap(((Float)-1.0));
HXLINE(  94)				callout->set_paddingTop(((Float)1.0));
HXLINE(  95)				callout->set_paddingRight(((Float)1.0));
HXLINE(  96)				callout->set_paddingBottom(((Float)1.0));
HXLINE(  97)				callout->set_paddingLeft(((Float)1.0));
HXLINE(  99)				callout->set_marginTop(((Float)10.0));
HXLINE( 100)				callout->set_marginRight(((Float)10.0));
HXLINE( 101)				callout->set_marginBottom(((Float)10.0));
HXLINE( 102)				callout->set_marginLeft(((Float)10.0));
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  35)			styleProvider->setStyleFunction(::hx::ClassOf< ::feathers::controls::TextCallout >(),null(), ::Dynamic(new _hx_Closure_0(theme1)));
            		}
HXLINE( 105)		if (::hx::IsNull( styleProvider->getStyleFunction(::hx::ClassOf< ::feathers::controls::TextCallout >(),::feathers::controls::TextCallout_obj::VARIANT_DANGER) )) {
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1,::Array< ::Dynamic>,theme1) HXARGC(1)
            			void _hx_run( ::feathers::controls::TextCallout callout){
            				HX_GC_STACKFRAME(&_hx_pos_cd97f16d6200cc0e_106_initialize)
HXLINE( 107)				if (::hx::IsNull( callout->get_textFormat() )) {
HXLINE( 108)					callout->set_textFormat(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getTextFormat(null()));
            				}
HXLINE( 110)				if (::hx::IsNull( callout->get_disabledTextFormat() )) {
HXLINE( 111)					callout->set_disabledTextFormat(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDisabledTextFormat(null()));
            				}
HXLINE( 113)				if (::hx::IsNull( callout->get_backgroundSkin() )) {
HXLINE( 114)					 ::feathers::skins::RectangleSkin backgroundSkin =  ::feathers::skins::RectangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 115)					backgroundSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerFill());
HXLINE( 116)					backgroundSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerBorder(null()));
HXLINE( 117)					callout->set_backgroundSkin(backgroundSkin);
            				}
HXLINE( 119)				if (::hx::IsNull( callout->get_topArrowSkin() )) {
HXLINE( 120)					 ::feathers::skins::TriangleSkin topArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 121)					topArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::TOP_dyn());
HXLINE( 122)					topArrowSkin->set_drawBaseBorder(false);
HXLINE( 123)					topArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerFill());
HXLINE( 124)					topArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerBorder(null()));
HXLINE( 125)					topArrowSkin->set_width(((Float)10.0));
HXLINE( 126)					topArrowSkin->set_height(((Float)6.0));
HXLINE( 127)					callout->set_topArrowSkin(topArrowSkin);
            				}
HXLINE( 129)				if (::hx::IsNull( callout->get_rightArrowSkin() )) {
HXLINE( 130)					 ::feathers::skins::TriangleSkin rightArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 131)					rightArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::RIGHT_dyn());
HXLINE( 132)					rightArrowSkin->set_drawBaseBorder(false);
HXLINE( 133)					rightArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerFill());
HXLINE( 134)					rightArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerBorder(null()));
HXLINE( 135)					rightArrowSkin->set_width(((Float)6.0));
HXLINE( 136)					rightArrowSkin->set_height(((Float)10.0));
HXLINE( 137)					callout->set_rightArrowSkin(rightArrowSkin);
            				}
HXLINE( 139)				if (::hx::IsNull( callout->get_bottomArrowSkin() )) {
HXLINE( 140)					 ::feathers::skins::TriangleSkin bottomArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 141)					bottomArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::BOTTOM_dyn());
HXLINE( 142)					bottomArrowSkin->set_drawBaseBorder(false);
HXLINE( 143)					bottomArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerFill());
HXLINE( 144)					bottomArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerBorder(null()));
HXLINE( 145)					bottomArrowSkin->set_width(((Float)10.0));
HXLINE( 146)					bottomArrowSkin->set_height(((Float)6.0));
HXLINE( 147)					callout->set_bottomArrowSkin(bottomArrowSkin);
            				}
HXLINE( 149)				if (::hx::IsNull( callout->get_leftArrowSkin() )) {
HXLINE( 150)					 ::feathers::skins::TriangleSkin leftArrowSkin =  ::feathers::skins::TriangleSkin_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 151)					leftArrowSkin->set_pointPosition(::feathers::layout::RelativePosition_obj::LEFT_dyn());
HXLINE( 152)					leftArrowSkin->set_drawBaseBorder(false);
HXLINE( 153)					leftArrowSkin->set_fill(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerFill());
HXLINE( 154)					leftArrowSkin->set_border(theme1->__get(0).StaticCast<  ::feathers::themes::steel::BaseSteelTheme >()->getDangerBorder(null()));
HXLINE( 155)					leftArrowSkin->set_width(((Float)6.0));
HXLINE( 156)					leftArrowSkin->set_height(((Float)10.0));
HXLINE( 157)					callout->set_leftArrowSkin(leftArrowSkin);
            				}
HXLINE( 160)				callout->set_topArrowGap(((Float)-1.0));
HXLINE( 161)				callout->set_rightArrowGap(((Float)-1.0));
HXLINE( 162)				callout->set_bottomArrowGap(((Float)-1.0));
HXLINE( 163)				callout->set_leftArrowGap(((Float)-1.0));
HXLINE( 165)				callout->set_paddingTop(((Float)1.0));
HXLINE( 166)				callout->set_paddingRight(((Float)1.0));
HXLINE( 167)				callout->set_paddingBottom(((Float)1.0));
HXLINE( 168)				callout->set_paddingLeft(((Float)1.0));
HXLINE( 170)				callout->set_marginTop(((Float)10.0));
HXLINE( 171)				callout->set_marginRight(((Float)10.0));
HXLINE( 172)				callout->set_marginBottom(((Float)10.0));
HXLINE( 173)				callout->set_marginLeft(((Float)10.0));
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 106)			styleProvider->setStyleFunction(::hx::ClassOf< ::feathers::controls::TextCallout >(),::feathers::controls::TextCallout_obj::VARIANT_DANGER, ::Dynamic(new _hx_Closure_1(theme1)));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SteelTextCalloutStyles_obj,initialize,(void))


SteelTextCalloutStyles_obj::SteelTextCalloutStyles_obj()
{
}

bool SteelTextCalloutStyles_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"initialize") ) { outValue = initialize_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *SteelTextCalloutStyles_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *SteelTextCalloutStyles_obj_sStaticStorageInfo = 0;
#endif

::hx::Class SteelTextCalloutStyles_obj::__mClass;

static ::String SteelTextCalloutStyles_obj_sStaticFields[] = {
	HX_("initialize",50,31,bb,ec),
	::String(null())
};

void SteelTextCalloutStyles_obj::__register()
{
	SteelTextCalloutStyles_obj _hx_dummy;
	SteelTextCalloutStyles_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("feathers.themes.steel.components.SteelTextCalloutStyles",69,a0,f2,9d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SteelTextCalloutStyles_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(SteelTextCalloutStyles_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< SteelTextCalloutStyles_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SteelTextCalloutStyles_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SteelTextCalloutStyles_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace feathers
} // end namespace themes
} // end namespace steel
} // end namespace components
